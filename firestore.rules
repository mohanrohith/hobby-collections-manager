rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidUserProfile() {
      let data = request.resource.data;
      return data.email is string &&
             data.createdAt is timestamp &&
             data.updatedAt is timestamp;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();  // Allow reading during auth
      allow create: if isAuthenticated() && request.auth.uid == userId && isValidUserProfile();
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user profile deletion
    }

    // User's items collection
    match /users/{userId}/items/{itemId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // User's categories collection
    match /users/{userId}/categories/{categoryId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 